# Generated by Django 4.2.20 on 2025-05-04 11:48

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Badge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=50, unique=True)),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("tier", models.CharField(max_length=20)),
                ("image", models.CharField(blank=True, max_length=255, null=True)),
                ("points", models.PositiveIntegerField(default=0)),
                ("share_message", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Badge",
                "verbose_name_plural": "Badges",
            },
        ),
        migrations.CreateModel(
            name="RewardItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("cost", models.PositiveIntegerField()),
                ("reward_type", models.CharField(max_length=20)),
                ("image", models.CharField(blank=True, max_length=255, null=True)),
                ("is_available", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Reward Item",
                "verbose_name_plural": "Reward Items",
            },
        ),
        migrations.CreateModel(
            name="UserPoints",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total_points", models.PositiveIntegerField(default=0)),
                ("level", models.PositiveIntegerField(default=1)),
                ("xp_to_next", models.PositiveIntegerField(default=100)),
                ("streak_days", models.PositiveIntegerField(default=0)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="gamify_points",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Points",
                "verbose_name_plural": "User Points",
            },
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("invite_code", models.CharField(max_length=20, unique=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "members",
                    models.ManyToManyField(
                        related_name="gamify_teams", to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            options={
                "verbose_name": "Team",
                "verbose_name_plural": "Teams",
            },
        ),
        migrations.CreateModel(
            name="Achievement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=50, unique=True)),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("achievement_type", models.CharField(max_length=20)),
                ("points", models.PositiveIntegerField(default=0)),
                ("is_secret", models.BooleanField(default=False)),
                ("animation", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "badge",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="gamification.badge",
                    ),
                ),
            ],
            options={
                "verbose_name": "Achievement",
                "verbose_name_plural": "Achievements",
            },
        ),
        migrations.CreateModel(
            name="UserAchievement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "unlocked_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("progress", models.JSONField(default=dict)),
                (
                    "achievement",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="gamification.achievement",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="gamify_achievements",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Achievement",
                "verbose_name_plural": "User Achievements",
                "unique_together": {("user", "achievement")},
            },
        ),
    ]
